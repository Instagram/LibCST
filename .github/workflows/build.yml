name: Python CI

on: [push, pull_request]

env:
  PIP_CACHE_DIR: ~/cache/pip

jobs:
  tox:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8]
        environment: [test]
        include:
          - os: ubuntu-latest
            python-version: 3.8
            environment: lint
          - os: ubuntu-latest
            python-version: 3.8
            environment: docs
          - os: ubuntu-latest
            python-version: 3.8
            environment: coverage
          - os: ubuntu-latest
            python-version: 3.8
            environment: pyre
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: pip cache
      uses: actions/cache@v2
      id:   cache
      with:
        path: '~/cache'
        key: pip-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.environment }}-${{ hashFiles('tox.ini', 'requirements.txt', 'requirements-dev.txt', 'setup.py') }}
        restore-keys: |
          pip-${{ matrix.os }}-${{ matrix.python-version }}-${{ matrix.environment }}-
          pip-${{ matrix.os }}-${{ matrix.python-version }}-
          pip-${{ matrix.os }}-
    - name: install tox
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions -r requirements.txt -r requirements-dev.txt
    - name: run tox
      run: tox --workdir ~/cache/tox -e ${{ matrix.environment }}
    - name: Archive Docs
      if: matrix.environment == 'docs'
      uses: actions/upload-artifact@v2
      with:
        name: sphinx-docs
        path: docs/build
    - name: Archive Coverage
      if: matrix.environment == 'coverage'
      uses: actions/upload-artifact@v2
      with:
        name: coverage
        path: coverage.xml

# Build python package
  build:
    needs: tox
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install pypa/build
      run: >-
        python -m
        pip install
        build
        --user
    - name: Build a binary wheel and a source tarball
      run: >-
        python -m
        build
        --sdist
        --wheel
        --outdir dist/
